// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopOnline.Repository;

#nullable disable

namespace ShopOnline.Repository.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220927063339_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ShopOnline.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Andy and Terry are celebrating Christmas in their 156-storey treehouse which now has 13 new storeys, including an aquarium wonderland, a wishing well, a world record breaking level, a TV quiz show hosted by Quizzy the quizzical quizbot, a lost property office, a lost sausage office, a super-stinky stuff level and the amazing mind-reading sandwich-making machine, which makes the perfect amazing sandwich for you - every single time! Well, what are you waiting for? Come on up!",
                            ImageUrl = "https://static.wikia.nocookie.net/storey-treehouse/images/9/9b/The_156_Storey_Treehouse_-_Australian_Edition.jpg/revision/latest?cb=20220621081735",
                            Name = "The 156-Storey Treehouse",
                            Price = 0m
                        },
                        new
                        {
                            Id = 2,
                            Description = "Based on the hit ABC KIDS TV show! BOO! It's time to get spooky! Use the magnets to take Bluey, Bingo and their friends on a fun-filled night-time adventure. A gorgeous magnet book for kids of all ages. Bluey is an award - winning preschool show about Bluey, a blue heeler pup, and her family.Airing on ABC KIDS, the show has amassed legions of dedicated fans and hugely popular ranges of books, toys, clothes, games and more.",
                            ImageUrl = "https://www.dymocks.com.au/Pages/ImageHandler.ashx?q=9781761046285&w=&h=570",
                            Name = "Bluey: Let's Get Spooky! A Magnet Book",
                            Price = 0m
                        },
                        new
                        {
                            Id = 3,
                            Description = "Say Cheese! Not only is it school photo day, but there are try-outs for an ice-cream ad! Can Weir and his friends score the starring roles? Or will their TV dreams melt away?! It won’t be easy ... but it will be funny!",
                            ImageUrl = "https://www.dymocks.com.au/Pages/ImageHandler.ashx?q=9781761127403&w=&h=570",
                            Name = "Cheesy Weird!",
                            Price = 0m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
